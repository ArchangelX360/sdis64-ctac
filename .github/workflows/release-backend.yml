name: "[backend] Production release"

on:
  push:
    tags:
      - v*
      - backend/v*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SSH_KEYFILEPATH: /tmp/private_key
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto
      - name: Gradle build cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-build-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-build-
      - name: Gradle wrapper cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
      - name: Materialize SSH private key on disk
        run: |
          echo "${{ secrets.SSH_KEY }}" > "${{ env.SSH_KEYFILEPATH }}"
          chmod 600 "${{ env.SSH_KEYFILEPATH }}"
      - name: Deploy to Production
        env:
          CI_COMMIT_SHA: ${{ github.sha }}
          SSH_PROXY_HOST: ${{ secrets.SSH_PROXY_HOST }}
          SSH_PROXY_PORT: ${{ secrets.SSH_PROXY_PORT }}
          SSH_PROXY_KEYFILEPATH: ${{ env.SSH_KEYFILEPATH }}
          SSH_PROXY_USERNAME: ${{ secrets.SSH_USERNAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          SSH_PRODUCTION_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PRODUCTION_KEYFILEPATH: ${{ env.SSH_KEYFILEPATH }}
        run: ./gradlew ":backend:deployProduction" -PdeployStack=true
