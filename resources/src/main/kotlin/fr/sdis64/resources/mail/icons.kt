package fr.sdis64.resources.mail

import fr.sdis64.resources.SVG_NAMESPACE
import fr.sdis64.resources.SvgPath
import kotlinx.serialization.Serializable
import nl.adaptivity.xmlutil.serialization.XML
import nl.adaptivity.xmlutil.serialization.XmlElement
import nl.adaptivity.xmlutil.serialization.XmlSerialName
import java.nio.file.Path
import kotlin.io.path.nameWithoutExtension
import kotlin.io.path.readText
import kotlin.io.path.writeText

fun Path.writeMailIconsDPathConstants(fromSvgs: List<Path>) {
    val constants = fromSvgs.map {
        val svg = XML.decodeFromString(IconSvg.serializer(), it.readText())
        svg.toKotlinConstant("${it.nameWithoutExtension}SvgDPath", "internal")
    }

    writeText(
        """
            /**
             * THIS FILE IS AUTOGENERATED BY `./gradlew :resources:generateUiResourcesComposableSourceFiles`, DO NOT EDIT MANUALLY
             */
            package fr.sdis64.ui.mail

${constants.joinToString("\n").prependIndent("            ")}
        """.trimIndent()
    )
}

@Serializable
@XmlSerialName("svg", SVG_NAMESPACE, "")
private data class IconSvg(
    val width: String,
    val height: String,
    val viewBox: String,
    @XmlElement(value = true) val path: SvgPath?,
) {
    fun toKotlinConstant(name: String, visibility: String?): String {
        val pathD = path?.d ?: error("could not find `d` path to generate constant $name")
        return """${visibility?.let { "$it " }}const val $name = "$pathD""""
    }
}
